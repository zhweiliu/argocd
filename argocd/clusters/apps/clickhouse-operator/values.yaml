altinity-clickhouse-operator:
  operator:
    image:
      repository: altinity/clickhouse-operator
      tag: ""
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    env: []

  metrics:
    enabled: true
    image:
      repository: altinity/metrics-exporter
      tag: ""
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    env: []

  imagePullSecrets: []

  podAnnotations:
    prometheus.io/port: '8888'
    prometheus.io/scrape: 'true'

  nameOverride: "chop"
  fullnameOverride: "chop"
  serviceAccount:
    create: true
    annotations: {}
    name:

  secret:
    create: true
    username: admin
    password: YWRtaW4=

  nodeSelector: {}
  tolerations: []
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - clickhouse-operator
          topologyKey: "kubernetes.io/hostname"
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: cloud.google.com/gke-nodepool
                operator: In
                values:
                  - clickhouse-operator
  serviceMonitor:
    enabled: false
    additionalLabels: {}

  configs:
    confdFiles: null
    configdFiles:
      01-clickhouse-01-listen.xml: |
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <yandex>
            <!-- Listen wildcard address to allow accepting connections from other containers and host network. -->
            <listen_host>::</listen_host>
            <listen_host>0.0.0.0</listen_host>
            <listen_try>1</listen_try>
        </yandex>
      01-clickhouse-02-logger.xml: |
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <yandex>
            <logger>
                <!-- Possible levels: https://github.com/pocoproject/poco/blob/develop/Foundation/include/Poco/Logger.h#L105 -->
                <level>debug</level>
                <log>/var/log/clickhouse-server/clickhouse-server.log</log>
                <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
                <size>1000M</size>
                <count>10</count>
                <!-- Default behavior is autodetection (log to console if not daemon mode and is tty) -->
                <console>1</console>
            </logger>
        </yandex>
      01-clickhouse-03-query_log.xml: |
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <yandex>
            <query_log replace="1">
                <database>system</database>
                <table>query_log</table>
                <engine>Engine = MergeTree PARTITION BY event_date ORDER BY event_time TTL event_date + interval 30 day</engine>
                <flush_interval_milliseconds>7500</flush_interval_milliseconds>
            </query_log>
            <query_thread_log remove="1"/>
        </yandex>
      01-clickhouse-04-part_log.xml: |
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <yandex>
            <part_log replace="1">
                <database>system</database>
                <table>part_log</table>
                <engine>Engine = MergeTree PARTITION BY event_date ORDER BY event_time TTL event_date + interval 30 day</engine>
                <flush_interval_milliseconds>7500</flush_interval_milliseconds>
            </part_log>
        </yandex>
      01-clickhouse-05-trace_log.xml: |-
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <yandex>
            <trace_log replace="1">
                <database>system</database>
                <table>trace_log</table>
                <engine>Engine = MergeTree PARTITION BY event_date ORDER BY event_time TTL event_date + interval 30 day</engine>
                <flush_interval_milliseconds>7500</flush_interval_milliseconds>
            </trace_log>
        </yandex>
      01-clickhouse-06-connections.xml: |-
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <yandex>
            <max_connections>10240</max_connections>
        </yandex>
    files:
      config.yaml: |-
        # IMPORTANT
        # This file is auto-generated
        # Do not edit this file - all changes would be lost
        # Edit appropriate template in the following folder:
        # deploy/builder/templates-config
        # IMPORTANT
        #
        # Template parameters available:
        #   WATCH_NAMESPACES=
        #   CH_USERNAME_PLAIN=
        #   CH_PASSWORD_PLAIN=
        #   CH_CREDENTIALS_SECRET_NAMESPACE=
        #   CH_CREDENTIALS_SECRET_NAME=clickhouse-operator

        ################################################
        ##
        ## Watch Section
        ##
        ################################################
        watch:
          # List of namespaces where clickhouse-operator watches for events.
          # Concurrently running operators should watch on different namespaces.
          # IMPORTANT
          # Regexp is applicable.
          #namespaces: ["dev", "test"]
          namespaces: ["clickhouse-operator","clickhouse"]

        clickhouse:
          configuration:
            ################################################
            ##
            ## Configuration Files Section
            ##
            ################################################
            file:
              path:
                # Path to the folder where ClickHouse configuration files common for all instances within a CHI are located.
                common: config.d
                # Path to the folder where ClickHouse configuration files unique for each instance (host) within a CHI are located.
                host: conf.d
                # Path to the folder where ClickHouse configuration files with users' settings are located.
                # Files are common for all instances within a CHI.
                user: users.d
            ################################################
            ##
            ## Configuration Users Section
            ##
            ################################################
            user:
              # Default settings for user accounts, created by the operator.
              # IMPORTANT. These are not access credentials or settings for 'default' user account,
              # it is a template for filling out missing fields for all user accounts to be created by the operator,
              # with the following EXCEPTIONS:
              # 1. 'default' user account DOES NOT use provided password, but uses all the rest of the fields.
              #    Password for 'default' user account has to be provided explicitly, if to be used.
              # 2. CHOP user account DOES NOT use:
              #    - profile setting. It uses predefined profile called 'clickhouse_operator'
              #    - quota setting. It uses empty quota name.
              #    - networks IP setting. Operator specifies 'networks/ip' user setting to match operators' pod IP only.
              #    - password setting. Password for CHOP account is used from 'clickhouse.access.*' section
              default:
                # Default values for ClickHouse user account(s) created by the operator
                #   1. user/profile - string
                #   2. user/quota - string
                #   3. user/networks/ip - multiple strings
                #   4. user/password - string
                # These values can be overwritten on per-user basis.
                profile: "default"
                quota: "default"
                networksIP:
                  - "::1"
                  - "127.0.0.1"
                password: "default"
            ################################################
            ##
            ## Configuration Network Section
            ##
            ################################################
            network:
              # Default host_regexp to limit network connectivity from outside
              hostRegexpTemplate: "(chi-{chi}-[^.]+\\d+-\\d+|clickhouse\\-{chi})\\.{namespace}\\.svc\\.cluster\\.local$"

          ################################################
          ##
          ## Configuration Restart Policy Section
          ## Configuration restart policy describes what configuration changes require ClickHouse restart
          ##
          ################################################
          configurationRestartPolicy:
            rules:
              - version: "*"
                rules:
                  - settings/*: "yes"
                  - settings/dictionaries_config: "no"
                  - settings/logger: "no"
                  - settings/macros/*: "no"
                  - settings/max_server_memory_*: "no"
                  - settings/max_*_to_drop: "no"
                  - settings/max_concurrent_queries: "no"
                  - settings/models_config: "no"
                  - settings/user_defined_executable_functions_config: "no"

                  - zookeeper/*: "yes"

                  - files/config.d/*.xml: "yes"
                  - files/config.d/*dict*.xml: "no"

                  - profiles/default/background_*_pool_size: "yes"
                  - profiles/default/max_*_for_server: "yes"
              - version: "21.*"
                rules:
                  - settings/logger: "yes"

          #################################################
          ##
          ## Access to ClickHouse instances
          ##
          ################################################
          access:
            # Possible values for 'scheme' are:
            #   1. http - force http to be used to connect to ClickHouse instances
            #   2. https - force https to be used to connect to ClickHouse instances
            #   3. auto - either http or https is selected based on open ports
            scheme: "auto"
            # ClickHouse credentials (username, password and port) to be used by the operator to connect to ClickHouse instances.
            # These credentials are used for:
            #   1. Metrics requests
            #   2. Schema maintenance
            #   3. DROP DNS CACHE
            # User with these credentials can be specified in additional ClickHouse .xml config files,
            # located in 'clickhouse.configuration.file.path.user' folder
            username: ""
            password: ""
            rootCA: ""

            # Location of the k8s Secret with username and password to be used by the operator to connect to ClickHouse instances.
            # Can be used instead of explicitly specified username and password available in sections:
            #   - clickhouse.access.username
            #   - clickhouse.access.password
            # Secret should have two keys:
            #   1. username
            #   2. password
            secret:
              # Empty `namespace` means that k8s secret would be looked in the same namespace where operator's pod is running.
              namespace: ""
              # Empty `name` means no k8s Secret would be looked for
              name: "{{ include "altinity-clickhouse-operator.fullname" . }}"
            # Port where to connect to ClickHouse instances to
            port: 8123

            # Timeouts used to limit connection and queries from the operator to ClickHouse instances
            # Specified in seconds.
            timeouts:
              connect: 2
              query: 5

          metrics:
            timeouts:
              collect: 9

        ################################################
        ##
        ## Templates Section
        ##
        ################################################
        template:
          chi:
            # CHI template updates handling policy
            # Possible policy values:
            #   - ReadOnStart. Accept CHIT updates on the operators start only.
            #   - ApplyOnNextReconcile. Accept CHIT updates at all time. Apply news CHITs on next regular reconcile of the CHI
            policy: ApplyOnNextReconcile

            # Path to the folder where ClickHouseInstallation templates .yaml manifests are located.
            # Templates are added to the list of all templates and used when CHI is reconciled.
            # Templates are applied in sorted alpha-numeric order.
            path: templates.d

        ################################################
        ##
        ## Reconcile Section
        ##
        ################################################
        reconcile:
          runtime:
            # Max number of concurrent CHI reconciles in progress
            reconcileCHIsThreadsNumber: 10
            # Max number of concurrent shard reconciles in progress
            reconcileShardsThreadsNumber: 1
            # The maximum percentage of cluster shards that may be reconciled in parallel
            reconcileShardsMaxConcurrencyPercent: 50

          statefulSet:
            create:
              # What to do in case created StatefulSet is not in 'Ready' after `reconcile.statefulSet.update.timeout` seconds
              # Possible options:
              # 1. abort - abort the process, do nothing with the problematic StatefulSet, leave it as it is,
              #    do not try to fix or delete or update it, just abort reconcile cycle.
              #    Do not proceed to the next StatefulSet(s) and wait for an admin to assist.
              # 2. delete - delete newly created problematic StatefulSet and follow 'abort' path afterwards.
              # 3. ignore - ignore an error, pretend nothing happened, continue reconcile and move on to the next StatefulSet.
              onFailure: ignore

            update:
              # How many seconds to wait for created/updated StatefulSet to be 'Ready'
              timeout: 300
              # How many seconds to wait between checks/polls for created/updated StatefulSet status
              pollInterval: 5
              # What to do in case updated StatefulSet is not in 'Ready' after `reconcile.statefulSet.update.timeout` seconds
              # Possible options:
              # 1. abort - abort the process, do nothing with the problematic StatefulSet, leave it as it is,
              #    do not try to fix or delete or update it, just abort reconcile cycle.
              #    Do not proceed to the next StatefulSet(s) and wait for an admin to assist.
              # 2. rollback - delete Pod and rollback StatefulSet to previous Generation.
              #    Pod would be recreated by StatefulSet based on rollback-ed StatefulSet configuration.
              #    Follow 'abort' path afterwards.
              # 3. ignore - ignore an error, pretend nothing happened, continue reconcile and move on to the next StatefulSet.
              onFailure: abort

          host:
            # Whether reconciler should wait for a host:
            # - to be excluded from a cluster
            # OR
            # - to be included into a cluster
            # respectfully before proceeding to the host reconciliation.
            wait:
              exclude: true
              include: false

        ################################################
        ##
        ## Annotations management
        ##
        ################################################
        annotation:
          # Applied when:
          #  1. Propagating annotations from the CHI's `metadata.annotations` to child objects' `metadata.annotations`,
          #  2. Propagating annotations from the CHI Template's `metadata.annotations` to CHI's `metadata.annotations`,
          # Include annotations from the following list:
          # Applied only when not empty. Empty list means "include all, no selection"
          include: []
          # Exclude annotations from the following list:
          exclude: []

        ################################################
        ##
        ## Labels management
        ##
        ################################################
        label:
          # Applied when:
          #  1. Propagating labels from the CHI's `metadata.labels` to child objects' `metadata.labels`,
          #  2. Propagating labels from the CHI Template's `metadata.labels` to CHI's `metadata.labels`,
          # Include labels from the following list:
          # Applied only when not empty. Empty list means "include all, no selection"
          include: []
          # Exclude labels from the following list:
          # Applied only when not empty. Empty list means "nothing to exclude, no selection"
          exclude: []
          # Whether to append *Scope* labels to StatefulSet and Pod.
          # Full list of available *scope* labels check in 'labeler.go'
          #  LabelShardScopeIndex
          #  LabelReplicaScopeIndex
          #  LabelCHIScopeIndex
          #  LabelCHIScopeCycleSize
          #  LabelCHIScopeCycleIndex
          #  LabelCHIScopeCycleOffset
          #  LabelClusterScopeIndex
          #  LabelClusterScopeCycleSize
          #  LabelClusterScopeCycleIndex
          #  LabelClusterScopeCycleOffset
          appendScope: "no"

        ################################################
        ##
        ## StatefulSet management
        ##
        ################################################
        statefulSet:
          revisionHistoryLimit: 0

        ################################################
        ##
        ## Pod management
        ##
        ################################################
        pod:
          # Grace period for Pod termination.
          # How many seconds to wait between sending
          # SIGTERM and SIGKILL during Pod termination process.
          # Increase this number is case of slow shutdown.
          terminationGracePeriod: 30

        ################################################
        ##
        ## Log parameters
        ##
        ################################################
        logger:
          logtostderr: "true"
          alsologtostderr: "false"
          v: "1"
          stderrthreshold: ""
          vmodule: ""
          log_backtrace_at: ""
    templatesdFiles:
      001-templates.json.example: |
        {
          "apiVersion": "clickhouse.altinity.com/v1",
          "kind": "ClickHouseInstallationTemplate",
          "metadata": {
            "name": "01-default-volumeclaimtemplate"
          },
          "spec": {
            "templates": {
              "volumeClaimTemplates": [
                {
                  "name": "chi-default-volume-claim-template",
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                }
              ],
              "podTemplates": [
                {
                  "name": "chi-default-oneperhost-pod-template",
                  "distribution": "OnePerHost",
                  "spec": {
                    "containers" : [
                      {
                        "name": "clickhouse",
                        "image": "clickhouse/clickhouse-server:22.3",
                        "ports": [
                          {
                            "name": "http",
                            "containerPort": 8123
                          },
                          {
                            "name": "client",
                            "containerPort": 9000
                          },
                          {
                            "name": "interserver",
                            "containerPort": 9009
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      default-pod-template.yaml.example: |
        apiVersion: "clickhouse.altinity.com/v1"
        kind: "ClickHouseInstallationTemplate"
        metadata:
          name: "default-oneperhost-pod-template"
        spec:
          templates:
            podTemplates:
              - name: default-oneperhost-pod-template
                distribution: "OnePerHost"
      default-storage-template.yaml.example: |
        apiVersion: "clickhouse.altinity.com/v1"
        kind: "ClickHouseInstallationTemplate"
        metadata:
          name: "default-storage-template-2Gi"
        spec:
          templates:
            volumeClaimTemplates:
              - name: default-storage-template-2Gi
                spec:
                  accessModes:
                    - ReadWriteOnce
                  resources:
                    requests:
                      storage: 2Gi
      readme: |-
        Templates in this folder are packaged with an operator and available via 'useTemplate'
    usersdFiles:
      01-clickhouse-operator-profile.xml: |
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <!--
        #
        # Template parameters available:
        #
        -->
        <yandex>
            <!-- clickhouse-operator user is generated by the operator based on config.yaml in runtime -->
            <profiles>
                <clickhouse_operator>
                    <log_queries>0</log_queries>
                    <skip_unavailable_shards>1</skip_unavailable_shards>
                    <http_connection_timeout>10</http_connection_timeout>
                    <max_concurrent_queries_for_all_users>0</max_concurrent_queries_for_all_users>
                    <os_thread_priority>0</os_thread_priority>
                </clickhouse_operator>
            </profiles>
        </yandex>
      02-clickhouse-default-profile.xml: |-
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <yandex>
          <profiles>
            <admin>
              <os_thread_priority>2</os_thread_priority>
              <log_queries>1</log_queries>
              <connect_timeout_with_failover_ms>1000</connect_timeout_with_failover_ms>
              <distributed_aggregation_memory_efficient>1</distributed_aggregation_memory_efficient>
              <parallel_view_processing>1</parallel_view_processing>
              <do_not_merge_across_partitions_select_final>1</do_not_merge_across_partitions_select_final>
              <load_balancing>nearest_hostname</load_balancing>
              <async_insert>1</async_insert>
              <wait_for_async_insert>1</wait_for_async_insert>
              <async_insert_deduplicate>1</async_insert_deduplicate>
            </admin>

            <default>
              <os_thread_priority>4</os_thread_priority>
              <log_queries>1</log_queries>
              <connect_timeout_with_failover_ms>1000</connect_timeout_with_failover_ms>
              <distributed_aggregation_memory_efficient>1</distributed_aggregation_memory_efficient>
              <parallel_view_processing>1</parallel_view_processing>
              <do_not_merge_across_partitions_select_final>1</do_not_merge_across_partitions_select_final>
              <load_balancing>nearest_hostname</load_balancing>
              <async_insert>1</async_insert>
              <wait_for_async_insert>1</wait_for_async_insert>
              <async_insert_deduplicate>1</async_insert_deduplicate>
            </default>

            <engineer>
              <os_thread_priority>3</os_thread_priority>
              <log_queries>1</log_queries>
              <connect_timeout_with_failover_ms>1000</connect_timeout_with_failover_ms>
              <distributed_aggregation_memory_efficient>1</distributed_aggregation_memory_efficient>
              <parallel_view_processing>1</parallel_view_processing>
              <do_not_merge_across_partitions_select_final>1</do_not_merge_across_partitions_select_final>
              <load_balancing>nearest_hostname</load_balancing>
              <async_insert>1</async_insert>
              <wait_for_async_insert>1</wait_for_async_insert>
              <async_insert_deduplicate>1</async_insert_deduplicate>
            </engineer>

            <metabase>
              <os_thread_priority>10</os_thread_priority>
              <log_queries>1</log_queries>
              <connect_timeout_with_failover_ms>1000</connect_timeout_with_failover_ms>
              <distributed_aggregation_memory_efficient>1</distributed_aggregation_memory_efficient>
              <parallel_view_processing>1</parallel_view_processing>
              <do_not_merge_across_partitions_select_final>1</do_not_merge_across_partitions_select_final>
              <load_balancing>nearest_hostname</load_balancing>
            </metabase>

            <microservice>
              <os_thread_priority>9</os_thread_priority>
              <log_queries>1</log_queries>
              <connect_timeout_with_failover_ms>1000</connect_timeout_with_failover_ms>
              <distributed_aggregation_memory_efficient>1</distributed_aggregation_memory_efficient>
              <parallel_view_processing>1</parallel_view_processing>
              <do_not_merge_across_partitions_select_final>1</do_not_merge_across_partitions_select_final>
              <load_balancing>nearest_hostname</load_balancing>
              <async_insert>1</async_insert>
              <wait_for_async_insert>1</wait_for_async_insert>
              <async_insert_deduplicate>1</async_insert_deduplicate>
            </microservice>

            <dbt>
              <os_thread_priority>9</os_thread_priority>
              <log_queries>1</log_queries>
              <connect_timeout_with_failover_ms>1000</connect_timeout_with_failover_ms>
              <distributed_aggregation_memory_efficient>1</distributed_aggregation_memory_efficient>
              <parallel_view_processing>1</parallel_view_processing>
              <do_not_merge_across_partitions_select_final>1</do_not_merge_across_partitions_select_final>
              <load_balancing>nearest_hostname</load_balancing>
              <async_insert>1</async_insert>
              <wait_for_async_insert>1</wait_for_async_insert>
              <async_insert_deduplicate>1</async_insert_deduplicate>
            </dbt>
          </profiles>
        </yandex>

  additionalResources: []
  dashboards:
    enabled: false
    additionalLabels:
      grafana_dashboard: ""
    annotations: {}
    grafana_folder: clickhouse
